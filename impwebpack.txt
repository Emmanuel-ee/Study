npm install webpack --save-dev

//...
    "scripts": {
        "build": "webpack -p",
        "watch": "webpack --watch"
    },
//...

var path = require('path');

module.exports = {
  entry: './assets/js/index.js',
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist')
  }
};

function greet() {
    console.log('Have a great day!');
};

export default greet;


import greet from './greeter.js';

console.log("I'm the entry point");
greet();


npm install moment --save

import moment from 'moment';

function greet() {
    var day = moment().format('dddd');
    console.log('Have a great ' + day + '!');
};

export default greet


npm install jshint jshint-loader --save-dev

webpack.config.js

var path = require('path');

module.exports = {
  entry: './assets/js/index.js',
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist')
  },
  // Add the JSHint loader
  module: {
    rules: [{
      test: /\.js$/, // Run the loader on all .js files
      exclude: /node_modules/, // ignore all files in the node_modules folder
      use: 'jshint-loader'
    }]
  }
};



npm i webpack --save-dev
npm i webpack-cli --save-dev
    "scripts": {
      "build": "webpack"
    }
	
	npm run build
	
	
	    "scripts": {
      "dev": "webpack --mode development",
      "build": "webpack --mode production"
    }
	
	
	    "scripts": {
      "dev": "webpack --mode development ./foo/src/js/index.js --output ./foo/main.js",
      "build": "webpack --mode production ./foo/src/js/index.js --output ./foo/main.js"
    }
	
	
	    npm i @babel/core babel-loader @babel/preset-env --save-dev

    {
        "presets": [
            "@babel/preset-env"
        ]
    }
	
	webpack.config.js
	
	    module.exports = {
      module: {
        rules: [
          {
            test: /\.js$/,
            exclude: /node_modules/,
            use: {
              loader: "babel-loader"
            }
          }
        ]
      }
    };
	
	    const arr = [1, 2, 3];
    const iAmJavascriptES6 = () => console.log(...arr);
    window.iAmJavascriptES6 = iAmJavascriptES6;
	
	npm i react react-dom --save-dev
	    npm i @babel/preset-react --save-dev

Configure the preset in .babelrc:

    {
      "presets": ["@babel/preset-env", "@babel/preset-react"]
    }
	
	    module.exports = {
      module: {
        rules: [
          {
            test: /\.(js|jsx)$/,
            exclude: /node_modules/,
            use: {
              loader: "babel-loader"
            }
          }
        ]
      }
    };

